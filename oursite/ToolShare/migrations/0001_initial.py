# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-11-14 18:48
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackoutTool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BorrowTool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrower_notes', models.TextField(blank=True, null=True)),
                ('lender_notes', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('currently_borrowed', models.BooleanField(default=False)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_acknowledgement', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('viewed', models.BooleanField(default=False, verbose_name='Viewd?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnTool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('borrowerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.BorrowTool')),
            ],
        ),
        migrations.CreateModel(
            name='ShareZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('zip_code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('sharezone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ShareZone')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ToolCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=2, unique=True, verbose_name='Category Code')),
                ('category_name', models.CharField(max_length=30, verbose_name='Category')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ToolCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_code', models.CharField(max_length=2, unique=True, verbose_name='Condition Code')),
                ('condition_name', models.CharField(max_length=30, verbose_name='Condition')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ToolLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_code', models.CharField(max_length=2, unique=True, verbose_name='Location Code')),
                ('location_name', models.CharField(max_length=15, verbose_name='Location')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ToolStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.CharField(max_length=2, unique=True, verbose_name='Status Code')),
                ('status_name', models.CharField(max_length=15, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Registrant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=225)),
                ('last_name', models.CharField(max_length=225)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address_line1', models.CharField(max_length=225)),
                ('address_line2', models.CharField(blank=True, max_length=225)),
                ('telephone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be between 7- 10 digits.', regex='^(1?(-?\\d{3})-?)?(\\d{3})(-?\\d{4})$')])),
                ('approval_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('BAS', 'Basic User'), ('SHD', 'Shed Coordinator'), ('SYS', 'System Administrator')], default='BAS', max_length=4)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('sharezone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ShareZone')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tool',
            name='tool_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ToolCategory'),
        ),
        migrations.AddField(
            model_name='tool',
            name='tool_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ToolCondition'),
        ),
        migrations.AddField(
            model_name='tool',
            name='tool_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ToolLocation'),
        ),
        migrations.AddField(
            model_name='tool',
            name='tool_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tool',
            name='tool_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ToolStatus'),
        ),
        migrations.AddField(
            model_name='returntool',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.Tool'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='borrowtool',
            name='borrowerId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='borrowtool',
            name='return_condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ToolShare.ToolCondition'),
        ),
        migrations.AddField(
            model_name='borrowtool',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.Tool'),
        ),
        migrations.AddField(
            model_name='blackouttool',
            name='toolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ToolShare.Tool'),
        ),
    ]
